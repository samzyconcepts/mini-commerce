/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CheckoutIndexRouteImport } from './routes/checkout/index'
import { Route as CartIndexRouteImport } from './routes/cart/index'
import { Route as ProductSlugRouteImport } from './routes/product/$slug'
import { Route as CheckoutSuccessIdRouteImport } from './routes/checkout/success.$id'

const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutIndexRoute = CheckoutIndexRouteImport.update({
  id: '/checkout/',
  path: '/checkout/',
  getParentRoute: () => rootRouteImport,
} as any)
const CartIndexRoute = CartIndexRouteImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductSlugRoute = ProductSlugRouteImport.update({
  id: '/product/$slug',
  path: '/product/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutSuccessIdRoute = CheckoutSuccessIdRouteImport.update({
  id: '/checkout/success/$id',
  path: '/checkout/success/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/product/$slug': typeof ProductSlugRoute
  '/cart': typeof CartIndexRoute
  '/checkout': typeof CheckoutIndexRoute
  '/checkout/success/$id': typeof CheckoutSuccessIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/product/$slug': typeof ProductSlugRoute
  '/cart': typeof CartIndexRoute
  '/checkout': typeof CheckoutIndexRoute
  '/checkout/success/$id': typeof CheckoutSuccessIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/product/$slug': typeof ProductSlugRoute
  '/cart/': typeof CartIndexRoute
  '/checkout/': typeof CheckoutIndexRoute
  '/checkout/success/$id': typeof CheckoutSuccessIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/product/$slug'
    | '/cart'
    | '/checkout'
    | '/checkout/success/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/product/$slug'
    | '/cart'
    | '/checkout'
    | '/checkout/success/$id'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/product/$slug'
    | '/cart/'
    | '/checkout/'
    | '/checkout/success/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  ProductSlugRoute: typeof ProductSlugRoute
  CartIndexRoute: typeof CartIndexRoute
  CheckoutIndexRoute: typeof CheckoutIndexRoute
  CheckoutSuccessIdRoute: typeof CheckoutSuccessIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout/': {
      id: '/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/$slug': {
      id: '/product/$slug'
      path: '/product/$slug'
      fullPath: '/product/$slug'
      preLoaderRoute: typeof ProductSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout/success/$id': {
      id: '/checkout/success/$id'
      path: '/checkout/success/$id'
      fullPath: '/checkout/success/$id'
      preLoaderRoute: typeof CheckoutSuccessIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  ProductSlugRoute: ProductSlugRoute,
  CartIndexRoute: CartIndexRoute,
  CheckoutIndexRoute: CheckoutIndexRoute,
  CheckoutSuccessIdRoute: CheckoutSuccessIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
